generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  username          String
  password          String
  profile_picture   String?
  created_at        DateTime      @default(now())

  // Relations
  role              Role
  client            Client?
  seller            Seller?
  // Contraintes relationnelles :
  // - Si role = "CLIENT", client doit exister
  // - Si role = "SELLER", seller doit exister

}

model Client{
  id                Int           @id @default(autoincrement())
  firstname         String
  lastname          String
  userId            Int           @unique
  user              User          @relation(fields: [userId], references: [id])
}

model Seller {
  id                Int           @id @default(autoincrement())
  business_name     String
  products          Product[]
  userId            Int           @unique
  user              User          @relation(fields: [userId],references: [id])
}

model Product {
  id                Int           @id @default(autoincrement())
  name              String
  description       String        @db.Text
  price             Decimal       @db.Decimal(10,2)
  stock             Int
  created_at        DateTime      @default(now())
  updated_at        DateTime      @default(now())
  sellerId          Int
  seller            Seller        @relation(fields: [sellerId], references: [id])
  images            Image[]
  categories        Category[]
}

model Image {
  id                Int           @id @default(autoincrement())
  url               String
  productId         Int
  product           Product       @relation(fields: [productId],references: [id])
}

model Category {
  id                Int           @id @default(autoincrement())
  name              String
  products          Product[]
}

enum Role {
  CLIENT
  SELLER
}